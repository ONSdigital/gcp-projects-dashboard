<td><%= h cluster.dig(:currentMasterVersion) %></td>
<td class="ip-addresses"><% if cluster.dig(:masterAuthorizedNetworksConfig, :cidrBlocks) %><% cluster[:masterAuthorizedNetworksConfig][:cidrBlocks].each do |cidr_block| %><%= h cidr_block[:cidrBlock] %><% if cidr_block.dig(:displayName) %> (<%= h cidr_block[:displayName] %>)<% end %><br><% end %><% end %></td>
<td><% if cluster.dig(:networkPolicy, :enabled) %><img src="/svg/tick.svg" alt="Enabled"><br><%= h cluster.dig(:networkPolicy, :provider).capitalize %><% end %></td>
<td class="ip-addresses"><%= h cluster.dig(:ipAllocationPolicy, :clusterIpv4CidrBlock) %></td>
<td><%= h cluster.dig(:databaseEncryption, :state).capitalize %></td>
<td><%= h cluster.dig(:maintenancePolicy, :window, :dailyMaintenanceWindow, :startTime) %></td>
<td><% if cluster.dig(:currentNodeCount) %><%= h cluster.dig(:currentNodeCount).to_i %><% else %>0<% end %></td>
<td><% if cluster.dig(:privateClusterConfig, :enablePrivateNodes) %><% end %></td>
<td><% if cluster.dig(:nodeConfig, :shieldedInstanceConfig, :enableSecureBoot) %><img src="/svg/tick.svg" alt="Enabled"><% else %><img src="/svg/exclamation.svg" alt="Disabled"><% end %></td>
<td><% if cluster.dig(:shieldedNodes, :enabled) %><img src="/svg/tick.svg" alt="Enabled"><% else %><img src="/svg/exclamation.svg" alt="Disabled"><% end %></td>
<td><% if cluster.dig(:workloadIdentityConfig, :workloadPool) %><img src="/svg/tick.svg" alt="Enabled"><% else %><img src="/svg/exclamation.svg" alt="Disabled"><% end %></td>
<td>
<% if cluster.dig(:nodePools) %>
<% cluster[:nodePools].each do |node_pool| %>
  <table class="nodepool">
    <thead>
      <tr>
        <th colspan="12"><%= h node_pool[:name] %></th>
      </tr>
      <tr>
        <th>Node Version</th>
        <th>Machine Type</th>
        <th>Disk Size</th>
        <th>Disk Type</th>
        <th>Image Type</th>
        <th>Auto-Repair</th>
        <th>Auto-Upgrade</th>
      <% if node_pool.dig(:autoscaling, :enabled) %>
        <th>Auto-Scaling</th>
      <% if node_pool.dig(:autoscaling, :minNodeCount) %>
        <th>Min Nodes</th>
      <% elsif node_pool.dig(:autoscaling, :autoprovisioned) %>
        <th>Auto-Provisioned</th>
      <% end %>
        <th>Max Nodes</th>
      <% end %> <%# autoscaling enabled %>
        <th>Max Pods/Node</th>
        <th>Status</th>
      </tr>
    </thead>
      <tbody>
        <tr>
          <td><%= h node_pool[:version] %></td>
          <td><%= h node_pool.dig(:config, :machineType) %></td>
          <td><%= h node_pool.dig(:config, :diskSizeGb).to_i %> GB</td>
          <td><%= h node_pool.dig(:config, :diskType) %></td>
          <td><%= h node_pool.dig(:config, :imageType) %></td>
          <td><% if node_pool.dig(:management, :autoRepair) %><img src="/svg/tick.svg" alt="Enabled"><% else %><img src="/svg/exclamation.svg" alt="Disabled"><% end %></td>
          <td><% if node_pool.dig(:management, :autoUpgrade) %><img src="/svg/tick.svg" alt="Enabled"><% else %><img src="/svg/exclamation.svg" alt="Disabled"><% end %></td>
        <% if node_pool.dig(:autoscaling, :enabled) %>
          <td><img src="/svg/tick.svg" alt="Enabled"></td>
        <% if node_pool.dig(:autoscaling, :minNodeCount) %>
          <td><%= h node_pool.dig(:autoscaling, :minNodeCount).to_i %></td>
        <% elsif node_pool.dig(:autoscaling, :autoprovisioned) %>
          <td><img src="/svg/tick.svg" alt="Enabled"></td>
        <% end %>
          <td><%= h node_pool.dig(:autoscaling, :maxNodeCount).to_i %></td>
        <% end %> <%# autoscaling enabled %>
          <td><%= h node_pool.dig(:maxPodsConstraint, :maxPodsPerNode).to_i %></td>
          <td><%= h node_pool[:status].capitalize %></td>
        </tr>
      </tbody>
  </table>
  <% end %> <%# nodePools.each %>
  <% end %> <%# nodePools %>
</td>
<td><%= h cluster.dig(:status).capitalize %></td>
<td><%= d project.get[:updated] %></td>