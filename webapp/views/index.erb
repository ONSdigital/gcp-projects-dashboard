<table>
  <thead>
    <tr>
      <th>Project</th>
      <th colspan="20">GKE Cluster</th>
    </tr>
    <tr>
      <th></th>
      <th>Created</th>
      <th>Location</th>
      <th>Master Version</th>
      <th>Master Authorised Networks</th>
      <th>Config Database (etcd)</th>
      <th>Maintenance Window</th>
      <th>Nodes</th>
      <th>Node Version</th>
      <th>Machine Type</th>
      <th>Disk Size</th>
      <th>Disk Type</th>
      <th>Image Type</th>
      <th>Private Nodes</th>
      <th>Secure Boot</th>
      <th>Shielded Nodes</th>
      <th>Max Pods/Node</th>
      <th>Status</th>
      <th>Retrieved</th>
    </tr>
  </thead>
  <tbody>
  <% projects.each_with_index do |project, i| cluster = project.get[:cluster] %>
     <tr class="<%= i.even? ? 'even' : 'odd' %>">
      <td class="project"><%= h project.document_id %></td>
      <td><%= d cluster.dig(:createTime) %></td>
      <td><% if cluster.dig(:location) != 'europe-west2') %><img class="glyph" src="/images/exclamation.png" alt="Warning"><%= h cluster.dig(:location) %><% else %><img class="uk" src="/images/uk.png" alt=""> London<% end %></td>
      <td><%= h cluster.dig(:currentMasterVersion) %></td>
      <td><% if cluster.dig(:masterAuthorizedNetworksConfig, :cidrBlocks) %><% cluster[:masterAuthorizedNetworksConfig][:cidrBlocks].each do |cidr_block| %><%= h cidr_block[:cidrBlock] %> (<%= h cidr_block[:displayName] %>)<br><% end %><% end %></td>
      <td><%= h cluster.dig(:databaseEncryption, :state).capitalize %></td>
      <td><%= h cluster.dig(:maintenancePolicy, :window, :dailyMaintenanceWindow, :startTime) %></td>
      <td><% if cluster.dig(:currentNodeCount) %><%= h cluster.dig(:currentNodeCount).to_i %><% else %>0<% end %></td>
      <td><%= h cluster.dig(:currentNodeVersion) %></td>
      <td><% if cluster.dig(:nodeConfig) %><%= h cluster.dig(:nodeConfig, :machineType) %><% end %></td>
      <td><% if cluster.dig(:nodeConfig) %><%= h cluster.dig(:nodeConfig, :diskSizeGb).to_i %> GB<% end %></td>
      <td><% if cluster.dig(:nodeConfig) %><%= h cluster.dig(:nodeConfig, :diskType) %><% end %></td>
      <td><% if cluster.dig(:nodeConfig) %><%= h cluster.dig(:nodeConfig, :imageType) %><% end %></td>
      <td><% if cluster.dig(:privateClusterConfig, :enablePrivateNodes) %><img class="glyph" src="/images/tick.png" alt="Enabled"><% else %><img class="glyph" src="/images/exclamation.png" alt="Disabled"><% end %></td>
      <td><% if cluster.dig(:nodeConfig, :shieldedInstanceConfig, :enableSecureBoot) %><img class="glyph" src="/images/tick.png" alt="Enabled"><% else %><img class="glyph" src="/images/exclamation.png" alt="Disabled"><% end %></td>
      <td><% if cluster.dig(:shieldedNodes, :enabled) %><img class="glyph" src="/images/tick.png" alt="Enabled"><% else %><img class="glyph" src="/images/exclamation.png" alt="Disabled"><% end %></td>
      <td><%= h cluster.dig(:defaultMaxPodsConstraint, :maxPodsPerNode).to_i %></td>
      <td><%= h cluster.dig(:status).capitalize %></td>
      <td><%= h project.dig(:updated) %></td>
    </tr>
  <% end %>
  </tbody>
</table>